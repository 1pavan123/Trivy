name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      # 🧱 1. Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🧼 2. Set Up Python Environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 📦 3. Install Project Dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          
      # 🧹 4. Static Code Analysis (Linting & Formatting)
      - name: Lint code with flake8
        run: |
          pip install flake8
          flake8 .

      # 🔒 5. Security Scanning
      - name: Bandit Security Scan
        run: |
          pip install bandit
          bandit -r .

      - name: Trivy File System Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: 0

      # 🧪 6. Unit Tests & Coverage
      - name: Unit testing and coverage
        run: |
          pip install pytest pytest-cov
          pytest --cov=my_app --cov-fail-under=80

      # 🐳 7. Build Docker Image
      - name: Build Docker image
        run: |
          docker build -t app:latest .

      # 🛡️ 8. Scan Docker Image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: app:latest
          format: table
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: 1

      # ☁️ 9. Push Docker Image to Docker Hub
      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
          docker tag app:latest myrepo/app:latest
          docker push myrepo/app:latest


