name: Trivy Scan Python App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # -----------------------------------------------------
      # Phase 1: Scan the filesystem *before* the Docker build
      # -----------------------------------------------------
      - name: Perform Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'

      - name: Upload Trivy FS scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() # Continue even if the previous step failed
        with:
          sarif_file: 'trivy-fs-results.sarif'

      # -----------------------------------------------------
      # Phase 2: Build the Docker image and scan the result
      # -----------------------------------------------------
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .
      
      - name: Perform Trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'myapp:latest'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          exit-code: '0' # Don't fail the build on image vulnerabilities
      
      - name: Upload Trivy Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() # Continue even if the previous step failed
        with:
          sarif_file: 'trivy-image-results.sarif'

